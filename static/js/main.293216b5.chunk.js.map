{"version":3,"sources":["Components/layouts/heading.js","Context.js","Components/tours/tour.js","Components/tours/tours.js","Components/layouts/reloadBtn.js","Components/layouts/loading.js","App.js","reportWebVitals.js","index.js"],"names":["Heading","props","heading","className","Context","React","createContext","reducer","state","action","type","toursArray","filter","tour","id","toursArrayPreLoaded","showFullText","Provider","dispatch","setState","loading","this","console","log","fetch","response","json","value","children","Component","Consumer","Tour","deleteTour","switchLen","flipper","data","name","image","price","info","String","src","slice","length","onClick","bind","Tours","lantgh","undefined","Fragment","map","ReloadBtn","Reload","reload","BtnName","Loading","waitingMsg","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.293216b5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Heading = (props) => {\r\n\r\nconst {heading} = props;\r\n  return(\r\n  <h2 className=\"heading\">{heading}</h2>\r\n  );\r\n}\r\n\r\nexport default Heading;","import React, {Component} from 'react';\r\nconst Context = React.createContext();\r\n\r\n// this will take care of conditional functionallity\r\nconst reducer = (state, action) => {\r\n\r\n  switch(action.type) {\r\n    case 'DELETE_TOUR':\r\n      return {\r\n       ...state,\r\n       toursArray: state.toursArray.filter(tour => tour.id !== action.id),\r\n      //  toursArrayLen: state.toursArray.length\r\n      }\r\n    case 'RELOAD': \r\n    return {\r\n      ...state,\r\n      toursArray: state.toursArrayPreLoaded\r\n    }\r\n    case 'TOGGLE_TEXT': \r\n    return{\r\n     ...state,\r\n     showFullText: !state.showFullText\r\n    }\r\n    default:\r\n      return state;  \r\n  }\r\n}\r\n\r\nclass Provider extends Component {\r\n\r\n  // this state will be passed to every child component via consumer component\r\n  state = {\r\n   toursArray: [],\r\n   dispatch: (action) => {\r\n    this.setState((state) => {\r\n      // returns an object from reducer function this was a silly mistake took you some time to debugg\r\n      return(reducer(state,action))\r\n    }); \r\n  },\r\n  showFullText: false,\r\n  loading: true\r\n  }\r\n\r\n\r\n\r\n\r\n async componentDidMount() {\r\n   this.setState((state) => {\r\n     return{\r\n       ...state,\r\n       loading: true\r\n     }\r\n   })\r\n  console.log(this.state);\r\n  let response = await fetch('https://course-api.com/react-tours-project');\r\n  response = await response.json();\r\n\r\n  this.setState((state) => {\r\n    return{\r\n      ...state,\r\n      toursArray: response,\r\n      toursArrayPreLoaded: response,\r\n      loading: false\r\n    }\r\n  });\r\n  console.log(this.state);\r\n\r\n}\r\n\r\n\r\n\r\n  render() {\r\n    return(\r\n    < Context.Provider value={this.state} >\r\n      {this.props.children}  \r\n    </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Provider; \r\n\r\nexport const Consumer = Context.Consumer;","import React,{Component} from 'react';\r\nimport {Consumer} from '../../Context';\r\n\r\nclass Tour extends Component { \r\n\r\n\r\nshowFullText = (dispatch) => {\r\n\r\n  dispatch({type: 'TOGGLE_TEXT'});\r\n}\r\n\r\ndeleteTour = (dispatch, id, switchLen) => {\r\n  dispatch({type: 'DELETE_TOUR', id: id, flipper: switchLen});\r\n           \r\n}\r\n\r\nrender() {  \r\n  return(\r\n    <Consumer>\r\n      {value => {\r\n       const { id, name, image, price} = this.props.data;  \r\n       let { info }  = this.props.data;\r\n      info = new String(info);\r\n       const { showFullText } = value \r\n       const { dispatch } = value;\r\n        //  console.log('calling tour component');     \r\n        return(\r\n          // html for individual tour goes here\r\n          <div className=\"individualTourContainer\">\r\n          <img className=\"tourImage\" src={image} />\r\n          <div className=\"infoContainer\">\r\n            <span className=\"nameOfTour\">  {name} </span>  <span className=\"priceOfTour\">$ {price} </span>          \r\n             <p className=\"info\">\r\n               {showFullText ? info : \r\n               info.slice(0, (info.length)/2)} \r\n               {/* {info}     */}\r\n             ...<span onClick={this.showFullText.bind(this, dispatch)} className=\"showMore\"> {showFullText ? 'Read Less' :\r\n              'Read More'}\r\n             </span>\r\n             </p> \r\n             <button onClick={this.deleteTour.bind(this, dispatch, id)} className=\"NotIntrested\">\r\n               Not Interested\r\n             </button>   \r\n          </div>\r\n          </div>\r\n        );   \r\n      }}\r\n    </Consumer>\r\n  )\r\n}\r\n}\r\n\r\nexport default Tour;","import React, { Component } from 'react';\r\nimport {Consumer} from '../../Context';\r\nimport Tour from './tour';\r\n\r\nclass Tours extends Component {\r\n\r\n  render() {\r\n    return(\r\n      <Consumer lantgh='jf'>\r\n        {value => {\r\n        const {toursArray} = value;\r\n        // for some wierd reason the function is called twice and and the firs time toursArray is undifined and the \r\n        // second time its defined so you made a if statement to display the content correctly\r\n        if(toursArray !== undefined) {\r\n           return(\r\n            // html goes here\r\n            <React.Fragment>\r\n               { \r\n               toursArray.map((tour) => {\r\n                return(                    \r\n                  <Tour\r\n                   key={tour.id}\r\n                   data = {tour}\r\n                  />\r\n                  );\r\n              })\r\n            }\r\n            </React.Fragment>\r\n          )\r\n        }\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tours; ","import React, { Component } from 'react';\r\nimport { Consumer } from '../../Context';\r\n\r\n\r\nclass ReloadBtn extends Component {\r\n\r\nReload = (reload) => {\r\n    reload({type: 'RELOAD'});\r\n}\r\n  render() {\r\n    return(\r\n      < Consumer >\r\n      { value => {\r\n      const  {BtnName} = this.props;\r\n      const { dispatch } = value;\r\n        return(\r\n        <button onClick={this.Reload.bind(this, dispatch)} className=\"reloadBtn\">\r\n          {BtnName}\r\n        </button>\r\n        )\r\n      }\r\n      }  \r\n      </Consumer> \r\n    )\r\n  }\r\n}\r\n\r\n// const ReloadBtn = (props) => {\r\n\r\n// const Reload = (reload) => {\r\n// reload({type: 'RELOAD'});\r\n// }\r\n \r\n//   const {BtnName} = props;\r\n//   return(\r\n  \r\n//   < Consumer >\r\n//   { value => {\r\n//   const { dispatch } = value;\r\n//     return(\r\n//     <button onClick={this.Reload.bind(this, dispatch)} className=\"reloadBtn\">\r\n//       {BtnName}\r\n//     </button>\r\n//     )\r\n//   }\r\n//   }  \r\n//   </Consumer> \r\n//   );\r\n// }\r\n\r\nexport default ReloadBtn;","import React from 'react';\r\n\r\nconst Loading = (props) => {\r\n  \r\n  const waitingMsg = props.waitingMsg;\r\n  return(\r\n  <h1 className=\"loading\">\r\n   {waitingMsg}...\r\n  </h1>\r\n  );\r\n}\r\n\r\nexport default Loading;","\nimport React, { Component } from 'react';\nimport './ManualCss/style.css';\nimport Heading from './Components/layouts/heading';\nimport Tours from './Components/tours/tours';\nimport Provider from './Context';\nimport { Consumer } from './Context';\nimport ReloadBtn from './Components/layouts/reloadBtn';\nimport Loading from './Components/layouts/loading';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider  >\n        \n        <Consumer >\n \n      \n          {value => {   \n          const { length } = value.toursArray;\n          const { loading } = value;\n          if(loading) {\n            return(\n              <div> \n             <Heading heading='Our Tours'/>\n             <Loading waitingMsg='Loading'/> \n              </div>              \n            )\n          }else {\n            return(\n            \n              <div className=\"container\">\n                 \n                  {length > 0 ? \n                  <Heading heading='Our Tours'/> :\n                  <Heading heading='No Tours'/>\n                  }\n                  {/* that is how a tyipical if statment is written in react remember that */}\n  \n                  {length > 0 ? \n                  <Tours /> :\n                   <ReloadBtn BtnName=\"Refresh\" />\n                  }\n              </div>\n              )\n          }\n        \n          }\n            \n          }\n        </Consumer>\n         \n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}